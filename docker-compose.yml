version: "3.9"
services:
    nginx: 
        image: nginx:alpine
        container_name: reverse_proxy
        restart: always
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - 80:80
        profiles: ['prod', 'lb']
    db:
        image: postgres:13-alpine
        env_file: ./.env
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
        container_name: db
        ports: 
            - '5432:5432'
        volumes:
            - dbdata:/var/lib/postgresql/data/
            - ./dbscripts:/docker-entrypoint-initdb.d
        profiles: ['api-dev', 'api-staging',  'api', 'dev', 'prod']

    api-dev:
        image: nus-utils/peer-review-api:dev
        env_file: ./.env
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_DATABASE=${POSTGRES_DATABASE}
            - JWT_SECRET=${JWT_SECRET}
            - RUN_ENV=local
            - ADMIN_NAME=admin
            - ADMIN_EMAIL=admin@local.com
            - ADMIN_PASSWORD=admin
        build:
            context: ./core/.
            target: builder
        volumes:
          - ./core:/app
        command: CompileDaemon --build="go build -o server" --command="./server"
        container_name: api-dev
        depends_on:
            - db
        ports:
            - '5000:5000'
        profiles: ['api-dev', 'dev']

    api-staging:
        image: nus-utils/peer-review-api:staging
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_DATABASE=${POSTGRES_DATABASE}
            - JWT_SECRET=${JWT_SECRET}
            - RUN_ENV=production
            - ADMIN_NAME=admin
            - ADMIN_EMAIL=admin@local.com
            - ADMIN_PASSWORD=admin
        build:
            context: ./core/.
            target: builder
        volumes:
          - ./core:/app
        command: CompileDaemon --build="go build -o server" --command="./server"
        container_name: api-dev
        depends_on:
            - db
        ports:
            - '5000:5000'
        profiles: ['api-staging', 'staging']

    api:
        image: nus-utils/peer-review-api:latest
        env_file: ./.env
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_DATABASE=${POSTGRES_DATABASE}
            - JWT_SECRET=${JWT_SECRET}
            - RUN_ENV=production
            - ADMIN_NAME=admin
            - ADMIN_EMAIL=admin@local.com
            - ADMIN_PASSWORD=admin
        build:
            context: ./core/.
        container_name: api
        depends_on:
            - db
        ports:
            - '5000:5000'
        profiles: ['api', 'prod']

    frontend-dev:
        build:
            context: ./frontend
            target: copy
        environment:
          - REACT_APP_API_URL=${API_URL}
        volumes:
          - /app/node_modules
          - ./frontend/src:/app/src
        command: npm run start
        ports:
            - '3000:3000'
        stdin_open: true
        profiles: ['dev', 'frontend-dev']

    frontend:
        build:
            context: ./frontend
            args:
              - REACT_APP_API_URL=${API_URL}
        ports:
            - '3000:3000'
        stdin_open: true
        profiles: ['prod', 'frontend']

volumes:
    dbdata:
